"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Page)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Sidebar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/Sidebar */ \"(app-pages-browser)/./components/Sidebar.tsx\");\n/* harmony import */ var _components_MessageList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/MessageList */ \"(app-pages-browser)/./components/MessageList.tsx\");\n/* harmony import */ var _components_MessageInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/MessageInput */ \"(app-pages-browser)/./components/MessageInput.tsx\");\n/* harmony import */ var _components_ThreadView__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ThreadView */ \"(app-pages-browser)/./components/ThreadView.tsx\");\n/* harmony import */ var _components_SearchBar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/SearchBar */ \"(app-pages-browser)/./components/SearchBar.tsx\");\n/* harmony import */ var _components_SearchResults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/SearchResults */ \"(app-pages-browser)/./components/SearchResults.tsx\");\n/* harmony import */ var _components_ui_circle_status__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/ui/circle-status */ \"(app-pages-browser)/./components/ui/circle-status.tsx\");\n/* harmony import */ var _barrel_optimize_names_Hash_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Hash!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/hash.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nfunction Page() {\n    _s();\n    const [appData, setAppData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedChannel, setSelectedChannel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedUser, setSelectedUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedChannelId, setSelectedChannelId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedUserId, setSelectedUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [openThreadId, setOpenThreadId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [searchResults, setSearchResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        messages: [],\n        files: []\n    });\n    // Fetch initial data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            fetch('/api/getData').then({\n                \"Page.useEffect\": async (res)=>{\n                    if (!res.ok) {\n                        const text = await res.text();\n                        throw new Error(\"Failed to fetch data: \".concat(res.status, \" \").concat(text));\n                    }\n                    return res.json();\n                }\n            }[\"Page.useEffect\"]).then({\n                \"Page.useEffect\": (data)=>{\n                    setAppData(data);\n                }\n            }[\"Page.useEffect\"]).catch({\n                \"Page.useEffect\": (err)=>{\n                    console.error('Failed to fetch data:', err);\n                }\n            }[\"Page.useEffect\"]);\n        }\n    }[\"Page.useEffect\"], []);\n    // Keep selected channel/user in sync\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            if (!appData) return;\n            const newSelectedChannel = appData.channels.find({\n                \"Page.useEffect\": (c)=>c.id === selectedChannelId\n            }[\"Page.useEffect\"]) || null;\n            const newSelectedUser = appData.users.find({\n                \"Page.useEffect\": (u)=>u.id === selectedUserId\n            }[\"Page.useEffect\"]) || null;\n            setSelectedChannel(newSelectedChannel);\n            setSelectedUser(newSelectedUser);\n        }\n    }[\"Page.useEffect\"], [\n        selectedChannelId,\n        selectedUserId,\n        appData\n    ]);\n    // Update messages when selection changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            if (!appData) return;\n            if (selectedChannelId) {\n                setMessages(appData.messages.filter({\n                    \"Page.useEffect\": (m)=>m.channelId === selectedChannelId\n                }[\"Page.useEffect\"]));\n            } else if (selectedUserId) {\n                const dmChannel = appData.channels.find({\n                    \"Page.useEffect.dmChannel\": (c)=>{\n                        var _appData_users_find;\n                        return c.isPrivate && c.name.includes(((_appData_users_find = appData.users.find({\n                            \"Page.useEffect.dmChannel\": (u)=>u.id === selectedUserId\n                        }[\"Page.useEffect.dmChannel\"])) === null || _appData_users_find === void 0 ? void 0 : _appData_users_find.name) || '');\n                    }\n                }[\"Page.useEffect.dmChannel\"]);\n                setMessages(dmChannel ? appData.messages.filter({\n                    \"Page.useEffect\": (m)=>m.channelId === dmChannel.id\n                }[\"Page.useEffect\"]) : []);\n            } else {\n                setMessages([]);\n            }\n        }\n    }[\"Page.useEffect\"], [\n        selectedChannelId,\n        selectedUserId,\n        appData\n    ]);\n    const handleSelectChannel = (channelId)=>{\n        setSelectedChannelId(channelId);\n        setSelectedUserId(null);\n        setOpenThreadId(null);\n        setSearchResults({\n            messages: [],\n            files: []\n        });\n    };\n    const handleSelectUser = async (userId)=>{\n        var _appData_users_find;\n        setSelectedUserId(userId);\n        setSelectedChannelId(null);\n        setOpenThreadId(null);\n        setSearchResults({\n            messages: [],\n            files: []\n        });\n        // Create DM channel if it doesn't exist\n        const currentUser = appData === null || appData === void 0 ? void 0 : appData.users[0];\n        if (!currentUser) return;\n        const isSelfDM = userId === currentUser.id;\n        const channelName = isSelfDM ? \"\".concat(currentUser.name, \"-notes\") : \"\".concat(currentUser.name, \"-\").concat(appData === null || appData === void 0 ? void 0 : (_appData_users_find = appData.users.find((u)=>u.id === userId)) === null || _appData_users_find === void 0 ? void 0 : _appData_users_find.name);\n        try {\n            const response = await fetch('/api/channels', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: channelName,\n                    isPrivate: true,\n                    isDM: true,\n                    isSelfDM\n                })\n            });\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Failed to create DM channel: \".concat(response.status, \" \").concat(text));\n            }\n            // Refresh data\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n        } catch (error) {\n            console.error('Error creating DM channel:', error);\n        }\n    };\n    const handleCreateChannel = async (channelName)=>{\n        try {\n            const response = await fetch('/api/channels', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: channelName\n                })\n            });\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Failed to create channel: \".concat(response.status, \" \").concat(text));\n            }\n            await response.json();\n            // Refresh data\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const data = await dataResponse.json();\n            setAppData(data);\n        } catch (error) {\n            console.error('Error creating channel:', error);\n        }\n    };\n    const handleSendMessage = async (content, attachments)=>{\n        if (!appData) return;\n        try {\n            // Find the appropriate channel\n            let newChannelId = selectedChannelId;\n            if (!newChannelId && selectedUserId) {\n                var _appData_users_find;\n                const currentUser = appData.users[0];\n                const isSelfDM = selectedUserId === currentUser.id;\n                const channelName = isSelfDM ? \"\".concat(currentUser.name, \"-notes\") : \"\".concat(currentUser.name, \"-\").concat((_appData_users_find = appData.users.find((u)=>u.id === selectedUserId)) === null || _appData_users_find === void 0 ? void 0 : _appData_users_find.name);\n                const dmChannel = appData.channels.find((c)=>c.name === channelName);\n                if (!dmChannel) {\n                    throw new Error('DM channel not found. Please try again.');\n                }\n                newChannelId = dmChannel.id;\n            }\n            if (!newChannelId) {\n                throw new Error('No channel selected and no DM channel found');\n            }\n            console.log('Sending message:', {\n                content,\n                channelId: newChannelId,\n                attachmentsCount: attachments.length\n            });\n            // Upload files first\n            const uploadedAttachments = await Promise.all(attachments.map(async (file)=>{\n                const formData = new FormData();\n                formData.append('file', file);\n                const uploadResponse = await fetch('/api/upload', {\n                    method: 'POST',\n                    body: formData\n                });\n                if (!uploadResponse.ok) {\n                    throw new Error(\"Failed to upload file: \".concat(uploadResponse.status));\n                }\n                return uploadResponse.json();\n            }));\n            const response = await fetch('/api/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    content,\n                    channelId: newChannelId,\n                    attachments: uploadedAttachments\n                })\n            });\n            const responseData = await response.json().catch(()=>null);\n            console.log('Message API response:', {\n                status: response.status,\n                ok: response.ok,\n                data: responseData\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to send message: \".concat(response.status, \" \").concat((responseData === null || responseData === void 0 ? void 0 : responseData.details) || (responseData === null || responseData === void 0 ? void 0 : responseData.error) || 'Unknown error'));\n            }\n            // Refresh data\n            console.log('Refreshing data after message send');\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n            setMessages(newData.messages.filter((m)=>m.channelId === newChannelId));\n        } catch (error) {\n            console.error('Failed to send message:', error);\n            alert(error instanceof Error ? error.message : 'Failed to send message');\n        }\n    };\n    const handleSendReply = async (content, attachments, parentMessageId)=>{\n        if (!appData) return;\n        const parentMsg = appData.messages.find((m)=>m.id === parentMessageId);\n        if (!parentMsg) {\n            console.error('Parent message not found:', parentMessageId);\n            return;\n        }\n        try {\n            console.log('Sending reply:', {\n                content,\n                channelId: parentMsg.channelId,\n                parentMessageId,\n                attachmentsCount: attachments.length\n            });\n            // Upload files first\n            const uploadedAttachments = await Promise.all(attachments.map(async (file)=>{\n                const formData = new FormData();\n                formData.append('file', file);\n                const uploadResponse = await fetch('/api/upload', {\n                    method: 'POST',\n                    body: formData\n                });\n                if (!uploadResponse.ok) {\n                    throw new Error(\"Failed to upload file: \".concat(uploadResponse.status));\n                }\n                return uploadResponse.json();\n            }));\n            const response = await fetch('/api/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    content,\n                    channelId: parentMsg.channelId,\n                    parentMessageId,\n                    attachments: uploadedAttachments\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json().catch(()=>null);\n                throw new Error(\"Failed to send reply: \".concat(response.status, \" \").concat((errorData === null || errorData === void 0 ? void 0 : errorData.details) || (errorData === null || errorData === void 0 ? void 0 : errorData.error) || 'Unknown error'));\n            }\n            // Refresh data\n            console.log('Refreshing data after reply');\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n            setMessages(newData.messages.filter((m)=>m.channelId === parentMsg.channelId));\n        } catch (error) {\n            console.error('Failed to send reply:', error);\n            alert(error instanceof Error ? error.message : 'Failed to send reply');\n        }\n    };\n    const handleReact = async (messageId, emoji)=>{\n        if (!appData) return;\n        const existingReaction = appData.reactions.find((r)=>r.messageId === messageId && r.userId === appData.users[0].id && r.emoji === emoji);\n        if (existingReaction) {\n            // Delete reaction\n            await fetch('/api/reactions', {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: existingReaction.id\n                })\n            });\n        } else {\n            // Create reaction\n            await fetch('/api/reactions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    messageId,\n                    emoji\n                })\n            });\n        }\n        // Refresh data instead of updating local state\n        const newData = await fetch('/api/getData').then((res)=>res.json());\n        setAppData(newData);\n    };\n    const handleOpenThread = async (messageId)=>{\n        // First verify the message exists in DB\n        try {\n            const response = await fetch(\"/api/messages/\".concat(messageId));\n            if (!response.ok) {\n                console.error('Failed to fetch message:', messageId);\n                return;\n            }\n            // Refresh data to ensure we have latest state\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n            // Only open thread if message exists in fresh data\n            const message = newData.messages.find((m)=>m.id === messageId);\n            if (message) {\n                setOpenThreadId(messageId);\n                setSelectedChannelId(message.channelId);\n            }\n        } catch (error) {\n            console.error('Failed to open thread:', error);\n        }\n    };\n    const handleCloseThread = ()=>{\n        setOpenThreadId(null);\n    };\n    const handleSearch = async (query)=>{\n        setSearchQuery(query);\n        if (!appData) return;\n        try {\n            const response = await fetch(\"/api/search?q=\".concat(encodeURIComponent(query)));\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Search failed: \".concat(response.status, \" \").concat(text));\n            }\n            const results = await response.json();\n            setSearchResults(results);\n        } catch (error) {\n            console.error('Search failed:', error);\n            setSearchResults({\n                messages: [],\n                files: []\n            });\n        }\n    };\n    const handleSelectSearchResult = (channelId, messageId)=>{\n        setSelectedChannelId(channelId);\n        setSelectedUserId(null);\n        setOpenThreadId(messageId);\n        setSearchQuery('');\n        setSearchResults({\n            messages: [],\n            files: []\n        });\n    };\n    const handleSetUserStatus = async (newStatus)=>{\n        try {\n            const response = await fetch('/api/users/status', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    status: newStatus\n                })\n            });\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Failed to update status: \".concat(response.status, \" \").concat(text));\n            }\n            await response.json();\n            // Refresh data\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n        } catch (error) {\n            console.error('Failed to update status:', error);\n        }\n    };\n    const handleSetUserAvatar = async (newEmoji)=>{\n        try {\n            const response = await fetch('/api/users/avatar', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    avatar: newEmoji\n                })\n            });\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Failed to update avatar: \".concat(response.status, \" \").concat(text));\n            }\n            await response.json();\n            // Refresh data\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n        } catch (error) {\n            console.error('Failed to update avatar:', error);\n        }\n    };\n    const handleSetUserName = async (newName)=>{\n        try {\n            const response = await fetch('/api/users/name', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: newName\n                })\n            });\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Failed to update name: \".concat(response.status, \" \").concat(text));\n            }\n            await response.json();\n            // Refresh data\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n        } catch (error) {\n            console.error('Failed to update name:', error);\n        }\n    };\n    return !appData ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: \"Loading data...\"\n    }, void 0, false, {\n        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n        lineNumber: 487,\n        columnNumber: 7\n    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col h-screen bg-gray-50 text-slate-700\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-none p-4 border-b border-gray-700 bg-gray-800 text-white\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SearchBar__WEBPACK_IMPORTED_MODULE_6__.SearchBar, {\n                    onSearch: handleSearch\n                }, void 0, false, {\n                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                    lineNumber: 491,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                lineNumber: 490,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-1 overflow-hidden\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Sidebar__WEBPACK_IMPORTED_MODULE_2__.Sidebar, {\n                        isOpen: true,\n                        channels: appData.channels.filter((ch)=>!ch.isPrivate),\n                        users: appData.users,\n                        onSelectChannel: handleSelectChannel,\n                        onSelectUser: handleSelectUser,\n                        onCreateChannel: handleCreateChannel,\n                        onSetUserStatus: handleSetUserStatus,\n                        onSetUserAvatar: handleSetUserAvatar,\n                        onSetUserName: handleSetUserName\n                    }, void 0, false, {\n                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                        lineNumber: 494,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-1 flex flex-col\",\n                        children: searchQuery.trim().length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SearchResults__WEBPACK_IMPORTED_MODULE_7__.SearchResults, {\n                            results: searchResults,\n                            users: appData.users,\n                            onSelectResult: handleSelectSearchResult\n                        }, void 0, false, {\n                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                            lineNumber: 507,\n                            columnNumber: 15\n                        }, this) : selectedChannel || selectedUser ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"p-4 border-b bg-white\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                        className: \"text-xl font-semibold\",\n                                        children: selectedChannel ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Hash_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                                    className: \"h-5 w-5\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 518,\n                                                    columnNumber: 25\n                                                }, this),\n                                                selectedChannel.name\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                            lineNumber: 517,\n                                            columnNumber: 23\n                                        }, this) : selectedUser && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center gap-3\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"relative\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"text-2xl\",\n                                                            children: selectedUser.avatar\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                            lineNumber: 524,\n                                                            columnNumber: 27\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_circle_status__WEBPACK_IMPORTED_MODULE_8__.CircleStatus, {\n                                                            isOnline: selectedUser.isOnline\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                            lineNumber: 525,\n                                                            columnNumber: 27\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 523,\n                                                    columnNumber: 25\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"flex flex-col\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            children: selectedUser.name\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                            lineNumber: 528,\n                                                            columnNumber: 27\n                                                        }, this),\n                                                        selectedUser.id === appData.users[0].id && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"text-sm text-gray-500\",\n                                                            children: \"Note to self\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                            lineNumber: 530,\n                                                            columnNumber: 29\n                                                        }, this),\n                                                        selectedUser.status && selectedUser.id !== appData.users[0].id && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"text-sm text-gray-500\",\n                                                            children: selectedUser.status\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                            lineNumber: 533,\n                                                            columnNumber: 29\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 527,\n                                                    columnNumber: 25\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                            lineNumber: 522,\n                                            columnNumber: 23\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                        lineNumber: 515,\n                                        columnNumber: 19\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                    lineNumber: 514,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex-1 flex overflow-hidden\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex-1 flex flex-col \".concat(openThreadId ? 'md:w-2/3' : 'w-full', \" bg-white border-l border-r\"),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MessageList__WEBPACK_IMPORTED_MODULE_3__.MessageList, {\n                                                    messages: messages || [],\n                                                    users: appData.users,\n                                                    reactions: appData.reactions,\n                                                    onReply: handleOpenThread,\n                                                    onReact: handleReact,\n                                                    onOpenThread: handleOpenThread\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 544,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MessageInput__WEBPACK_IMPORTED_MODULE_4__.MessageInput, {\n                                                    onSendMessage: handleSendMessage,\n                                                    replyingTo: null,\n                                                    onCancelReply: ()=>{},\n                                                    placeholder: \"Send a message to the channel...\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 552,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                            lineNumber: 543,\n                                            columnNumber: 19\n                                        }, this),\n                                        openThreadId && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"hidden md:flex md:w-1/3 border-l\",\n                                            children: messages.some((m)=>m.id === openThreadId) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ThreadView__WEBPACK_IMPORTED_MODULE_5__.ThreadView, {\n                                                parentMessage: messages.find((m)=>m.id === openThreadId),\n                                                replies: messages.filter((m)=>m.parentMessageId === openThreadId),\n                                                users: appData.users,\n                                                reactions: appData.reactions,\n                                                onClose: handleCloseThread,\n                                                onReply: (content, attachments, parentMessageId)=>{\n                                                    void handleSendReply(content, attachments, parentMessageId);\n                                                },\n                                                onReact: handleReact\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                lineNumber: 562,\n                                                columnNumber: 25\n                                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"p-4\",\n                                                children: \"Loading thread...\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                lineNumber: 574,\n                                                columnNumber: 25\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                            lineNumber: 560,\n                                            columnNumber: 21\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                    lineNumber: 542,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center justify-center h-full\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-center\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                        className: \"text-2xl font-bold mb-4\",\n                                        children: \"Welcome to ChatGenius\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                        lineNumber: 583,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"Select a channel or user to start messaging, or use the search bar above.\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                        lineNumber: 584,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                lineNumber: 582,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                            lineNumber: 581,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                        lineNumber: 505,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                lineNumber: 493,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n        lineNumber: 489,\n        columnNumber: 7\n    }, this);\n}\n_s(Page, \"NeiM4tU3URUI5jf9/Y/upxTR+1s=\");\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ })

});