"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Page)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Sidebar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/Sidebar */ \"(app-pages-browser)/./components/Sidebar.tsx\");\n/* harmony import */ var _components_MessageList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/MessageList */ \"(app-pages-browser)/./components/MessageList.tsx\");\n/* harmony import */ var _components_MessageInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/MessageInput */ \"(app-pages-browser)/./components/MessageInput.tsx\");\n/* harmony import */ var _components_ThreadView__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ThreadView */ \"(app-pages-browser)/./components/ThreadView.tsx\");\n/* harmony import */ var _components_SearchBar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/SearchBar */ \"(app-pages-browser)/./components/SearchBar.tsx\");\n/* harmony import */ var _components_SearchResults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/SearchResults */ \"(app-pages-browser)/./components/SearchResults.tsx\");\n/* harmony import */ var _components_ui_circle_status__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/ui/circle-status */ \"(app-pages-browser)/./components/ui/circle-status.tsx\");\n/* harmony import */ var _barrel_optimize_names_Hash_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Hash!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/hash.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nfunction Page() {\n    _s();\n    const [appData, setAppData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedChannel, setSelectedChannel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedUser, setSelectedUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedChannelId, setSelectedChannelId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedUserId, setSelectedUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [openThreadId, setOpenThreadId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [searchResults, setSearchResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        messages: [],\n        files: []\n    });\n    // Fetch initial data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            fetch('/api/getData').then({\n                \"Page.useEffect\": async (res)=>{\n                    if (!res.ok) {\n                        const text = await res.text();\n                        throw new Error(\"Failed to fetch data: \".concat(res.status, \" \").concat(text));\n                    }\n                    return res.json();\n                }\n            }[\"Page.useEffect\"]).then({\n                \"Page.useEffect\": (data)=>{\n                    setAppData(data);\n                }\n            }[\"Page.useEffect\"]).catch({\n                \"Page.useEffect\": (err)=>{\n                    console.error('Failed to fetch data:', err);\n                }\n            }[\"Page.useEffect\"]);\n        }\n    }[\"Page.useEffect\"], []);\n    // Keep selected channel/user in sync\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            if (!appData) return;\n            const newSelectedChannel = appData.channels.find({\n                \"Page.useEffect\": (c)=>c.id === selectedChannelId\n            }[\"Page.useEffect\"]) || null;\n            const newSelectedUser = appData.users.find({\n                \"Page.useEffect\": (u)=>u.id === selectedUserId\n            }[\"Page.useEffect\"]) || null;\n            setSelectedChannel(newSelectedChannel);\n            setSelectedUser(newSelectedUser);\n        }\n    }[\"Page.useEffect\"], [\n        selectedChannelId,\n        selectedUserId,\n        appData\n    ]);\n    // Update messages when selection changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            if (!appData) return;\n            if (selectedChannelId) {\n                setMessages(appData.messages.filter({\n                    \"Page.useEffect\": (m)=>m.channelId === selectedChannelId\n                }[\"Page.useEffect\"]));\n            } else if (selectedUserId) {\n                const dmChannel = appData.channels.find({\n                    \"Page.useEffect.dmChannel\": (c)=>{\n                        var _appData_users_find;\n                        return c.isPrivate && c.name.includes(((_appData_users_find = appData.users.find({\n                            \"Page.useEffect.dmChannel\": (u)=>u.id === selectedUserId\n                        }[\"Page.useEffect.dmChannel\"])) === null || _appData_users_find === void 0 ? void 0 : _appData_users_find.name) || '');\n                    }\n                }[\"Page.useEffect.dmChannel\"]);\n                setMessages(dmChannel ? appData.messages.filter({\n                    \"Page.useEffect\": (m)=>m.channelId === dmChannel.id\n                }[\"Page.useEffect\"]) : []);\n            } else {\n                setMessages([]);\n            }\n        }\n    }[\"Page.useEffect\"], [\n        selectedChannelId,\n        selectedUserId,\n        appData\n    ]);\n    const handleSelectChannel = (channelId)=>{\n        setSelectedChannelId(channelId);\n        setSelectedUserId(null);\n        setOpenThreadId(null);\n        setSearchResults({\n            messages: [],\n            files: []\n        });\n    };\n    const handleSelectUser = (userId)=>{\n        setSelectedUserId(userId);\n        setSelectedChannelId(null);\n        setOpenThreadId(null);\n        setSearchResults({\n            messages: [],\n            files: []\n        });\n    };\n    const handleCreateChannel = async (channelName)=>{\n        try {\n            const response = await fetch('/api/channels', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: channelName\n                })\n            });\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Failed to create channel: \".concat(response.status, \" \").concat(text));\n            }\n            await response.json();\n            // Refresh data\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const data = await dataResponse.json();\n            setAppData(data);\n        } catch (error) {\n            console.error('Error creating channel:', error);\n        }\n    };\n    const handleSendMessage = async (content, attachments)=>{\n        if (!appData) return;\n        try {\n            var _appData_channels_find;\n            const newChannelId = selectedChannelId || ((_appData_channels_find = appData.channels.find((c)=>{\n                var _appData_users_find;\n                return c.isPrivate && c.name.includes(((_appData_users_find = appData.users.find((u)=>u.id === selectedUserId)) === null || _appData_users_find === void 0 ? void 0 : _appData_users_find.name) || '');\n            })) === null || _appData_channels_find === void 0 ? void 0 : _appData_channels_find.id) || '';\n            if (!newChannelId) {\n                throw new Error('No channel selected and no DM channel found');\n            }\n            console.log('Sending message:', {\n                content,\n                channelId: newChannelId,\n                attachmentsCount: attachments.length\n            });\n            // Upload files first\n            const uploadedAttachments = await Promise.all(attachments.map(async (file)=>{\n                const formData = new FormData();\n                formData.append('file', file);\n                const uploadResponse = await fetch('/api/upload', {\n                    method: 'POST',\n                    body: formData\n                });\n                if (!uploadResponse.ok) {\n                    throw new Error(\"Failed to upload file: \".concat(uploadResponse.status));\n                }\n                return uploadResponse.json();\n            }));\n            const response = await fetch('/api/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    content,\n                    channelId: newChannelId,\n                    attachments: uploadedAttachments\n                })\n            });\n            const responseData = await response.json().catch(()=>null);\n            console.log('Message API response:', {\n                status: response.status,\n                ok: response.ok,\n                data: responseData\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to send message: \".concat(response.status, \" \").concat((responseData === null || responseData === void 0 ? void 0 : responseData.details) || (responseData === null || responseData === void 0 ? void 0 : responseData.error) || 'Unknown error'));\n            }\n            // Refresh data\n            console.log('Refreshing data after message send');\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n            setMessages(newData.messages.filter((m)=>m.channelId === newChannelId));\n        } catch (error) {\n            console.error('Failed to send message:', error);\n            alert(error instanceof Error ? error.message : 'Failed to send message');\n        }\n    };\n    const handleSendReply = async (content, attachments, parentMessageId)=>{\n        if (!appData) return;\n        const parentMsg = appData.messages.find((m)=>m.id === parentMessageId);\n        if (!parentMsg) {\n            console.error('Parent message not found:', parentMessageId);\n            return;\n        }\n        try {\n            console.log('Sending reply:', {\n                content,\n                channelId: parentMsg.channelId,\n                parentMessageId,\n                attachmentsCount: attachments.length\n            });\n            // Upload files first\n            const uploadedAttachments = await Promise.all(attachments.map(async (file)=>{\n                const formData = new FormData();\n                formData.append('file', file);\n                const uploadResponse = await fetch('/api/upload', {\n                    method: 'POST',\n                    body: formData\n                });\n                if (!uploadResponse.ok) {\n                    throw new Error(\"Failed to upload file: \".concat(uploadResponse.status));\n                }\n                return uploadResponse.json();\n            }));\n            const response = await fetch('/api/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    content,\n                    channelId: parentMsg.channelId,\n                    parentMessageId,\n                    attachments: uploadedAttachments\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json().catch(()=>null);\n                throw new Error(\"Failed to send reply: \".concat(response.status, \" \").concat((errorData === null || errorData === void 0 ? void 0 : errorData.details) || (errorData === null || errorData === void 0 ? void 0 : errorData.error) || 'Unknown error'));\n            }\n            // Refresh data\n            console.log('Refreshing data after reply');\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n            setMessages(newData.messages.filter((m)=>m.channelId === parentMsg.channelId));\n        } catch (error) {\n            console.error('Failed to send reply:', error);\n            alert(error instanceof Error ? error.message : 'Failed to send reply');\n        }\n    };\n    const handleReact = async (messageId, emoji)=>{\n        if (!appData) return;\n        const existingReaction = appData.reactions.find((r)=>r.messageId === messageId && r.userId === appData.users[0].id && r.emoji === emoji);\n        if (existingReaction) {\n            // Delete reaction\n            await fetch('/api/reactions', {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: existingReaction.id\n                })\n            });\n        } else {\n            // Create reaction\n            await fetch('/api/reactions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    messageId,\n                    emoji\n                })\n            });\n        }\n        // Refresh data instead of updating local state\n        const newData = await fetch('/api/getData').then((res)=>res.json());\n        setAppData(newData);\n    };\n    const handleOpenThread = async (messageId)=>{\n        // First verify the message exists in DB\n        try {\n            const response = await fetch(\"/api/messages/\".concat(messageId));\n            if (!response.ok) {\n                console.error('Failed to fetch message:', messageId);\n                return;\n            }\n            // Refresh data to ensure we have latest state\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n            // Only open thread if message exists in fresh data\n            const message = newData.messages.find((m)=>m.id === messageId);\n            if (message) {\n                setOpenThreadId(messageId);\n                setSelectedChannelId(message.channelId);\n            }\n        } catch (error) {\n            console.error('Failed to open thread:', error);\n        }\n    };\n    const handleCloseThread = ()=>{\n        setOpenThreadId(null);\n    };\n    const handleSearch = async (query)=>{\n        setSearchQuery(query);\n        if (!appData) return;\n        try {\n            const response = await fetch(\"/api/search?q=\".concat(encodeURIComponent(query)));\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Search failed: \".concat(response.status, \" \").concat(text));\n            }\n            const results = await response.json();\n            setSearchResults(results);\n        } catch (error) {\n            console.error('Search failed:', error);\n            setSearchResults({\n                messages: [],\n                files: []\n            });\n        }\n    };\n    const handleSelectSearchResult = (channelId, messageId)=>{\n        setSelectedChannelId(channelId);\n        setSelectedUserId(null);\n        setOpenThreadId(messageId);\n        setSearchQuery('');\n        setSearchResults({\n            messages: [],\n            files: []\n        });\n    };\n    const handleSetUserStatus = async (newStatus)=>{\n        try {\n            const response = await fetch('/api/users/status', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    status: newStatus\n                })\n            });\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Failed to update status: \".concat(response.status, \" \").concat(text));\n            }\n            await response.json();\n            // Refresh data\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n        } catch (error) {\n            console.error('Failed to update status:', error);\n        }\n    };\n    const handleSetUserAvatar = async (newEmoji)=>{\n        try {\n            const response = await fetch('/api/users/avatar', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    avatar: newEmoji\n                })\n            });\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Failed to update avatar: \".concat(response.status, \" \").concat(text));\n            }\n            await response.json();\n            // Refresh data\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n        } catch (error) {\n            console.error('Failed to update avatar:', error);\n        }\n    };\n    const handleSetUserName = async (newName)=>{\n        try {\n            const response = await fetch('/api/users/name', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: newName\n                })\n            });\n            if (!response.ok) {\n                const text = await response.text();\n                throw new Error(\"Failed to update name: \".concat(response.status, \" \").concat(text));\n            }\n            await response.json();\n            // Refresh data\n            const dataResponse = await fetch('/api/getData');\n            if (!dataResponse.ok) {\n                const text = await dataResponse.text();\n                throw new Error(\"Failed to refresh data: \".concat(dataResponse.status, \" \").concat(text));\n            }\n            const newData = await dataResponse.json();\n            setAppData(newData);\n        } catch (error) {\n            console.error('Failed to update name:', error);\n        }\n    };\n    return !appData ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: \"Loading data...\"\n    }, void 0, false, {\n        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n        lineNumber: 439,\n        columnNumber: 7\n    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col h-screen bg-gray-50 text-slate-700\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-none p-4 border-b border-gray-700 bg-gray-800 text-white\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SearchBar__WEBPACK_IMPORTED_MODULE_6__.SearchBar, {\n                    onSearch: handleSearch\n                }, void 0, false, {\n                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                    lineNumber: 443,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                lineNumber: 442,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-1 overflow-hidden\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Sidebar__WEBPACK_IMPORTED_MODULE_2__.Sidebar, {\n                        isOpen: true,\n                        channels: appData.channels.filter((ch)=>!ch.isPrivate),\n                        users: appData.users,\n                        onSelectChannel: handleSelectChannel,\n                        onSelectUser: handleSelectUser,\n                        onCreateChannel: handleCreateChannel,\n                        onSetUserStatus: handleSetUserStatus,\n                        onSetUserAvatar: handleSetUserAvatar,\n                        onSetUserName: handleSetUserName\n                    }, void 0, false, {\n                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                        lineNumber: 446,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-1 flex flex-col\",\n                        children: searchQuery.trim().length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SearchResults__WEBPACK_IMPORTED_MODULE_7__.SearchResults, {\n                            results: searchResults,\n                            users: appData.users,\n                            onSelectResult: handleSelectSearchResult\n                        }, void 0, false, {\n                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                            lineNumber: 459,\n                            columnNumber: 15\n                        }, this) : selectedChannel || selectedUser ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"p-4 border-b bg-white\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                        className: \"text-xl font-semibold\",\n                                        children: selectedChannel ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Hash_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                                    className: \"h-5 w-5\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 470,\n                                                    columnNumber: 25\n                                                }, this),\n                                                selectedChannel.name\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                            lineNumber: 469,\n                                            columnNumber: 23\n                                        }, this) : selectedUser && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center gap-3\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"relative\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"text-2xl\",\n                                                            children: selectedUser.avatar\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                            lineNumber: 476,\n                                                            columnNumber: 27\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_circle_status__WEBPACK_IMPORTED_MODULE_8__.CircleStatus, {\n                                                            isOnline: selectedUser.isOnline\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                            lineNumber: 477,\n                                                            columnNumber: 27\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 475,\n                                                    columnNumber: 25\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"flex flex-col\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            children: selectedUser.name\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                            lineNumber: 480,\n                                                            columnNumber: 27\n                                                        }, this),\n                                                        selectedUser.status && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"text-sm text-gray-500\",\n                                                            children: selectedUser.status\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                            lineNumber: 482,\n                                                            columnNumber: 29\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 479,\n                                                    columnNumber: 25\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                            lineNumber: 474,\n                                            columnNumber: 23\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                        lineNumber: 467,\n                                        columnNumber: 19\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                    lineNumber: 466,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex-1 flex overflow-hidden\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex-1 flex flex-col \".concat(openThreadId ? 'md:w-2/3' : 'w-full', \" bg-white border-l border-r\"),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MessageList__WEBPACK_IMPORTED_MODULE_3__.MessageList, {\n                                                    messages: messages || [],\n                                                    users: appData.users,\n                                                    reactions: appData.reactions,\n                                                    onReply: handleOpenThread,\n                                                    onReact: handleReact,\n                                                    onOpenThread: handleOpenThread\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 493,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MessageInput__WEBPACK_IMPORTED_MODULE_4__.MessageInput, {\n                                                    onSendMessage: handleSendMessage,\n                                                    replyingTo: null,\n                                                    onCancelReply: ()=>{},\n                                                    placeholder: \"Send a message to the channel...\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                    lineNumber: 501,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                            lineNumber: 492,\n                                            columnNumber: 19\n                                        }, this),\n                                        openThreadId && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"hidden md:flex md:w-1/3 border-l\",\n                                            children: messages.some((m)=>m.id === openThreadId) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ThreadView__WEBPACK_IMPORTED_MODULE_5__.ThreadView, {\n                                                parentMessage: messages.find((m)=>m.id === openThreadId),\n                                                replies: messages.filter((m)=>m.parentMessageId === openThreadId),\n                                                users: appData.users,\n                                                reactions: appData.reactions,\n                                                onClose: handleCloseThread,\n                                                onReply: (content, attachments, parentMessageId)=>{\n                                                    void handleSendReply(content, attachments, parentMessageId);\n                                                },\n                                                onReact: handleReact\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                lineNumber: 511,\n                                                columnNumber: 25\n                                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"p-4\",\n                                                children: \"Loading thread...\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                                lineNumber: 523,\n                                                columnNumber: 25\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                            lineNumber: 509,\n                                            columnNumber: 21\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                    lineNumber: 491,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center justify-center h-full\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-center\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                        className: \"text-2xl font-bold mb-4\",\n                                        children: \"Welcome to ChatGenius\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                        lineNumber: 532,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"Select a channel or user to start messaging, or use the search bar above.\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                        lineNumber: 533,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                                lineNumber: 531,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                            lineNumber: 530,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                        lineNumber: 457,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n                lineNumber: 445,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nilsl/Documents/Nils/projects/gauntlet/slack-clone-v0/app/page.tsx\",\n        lineNumber: 441,\n        columnNumber: 7\n    }, this);\n}\n_s(Page, \"NeiM4tU3URUI5jf9/Y/upxTR+1s=\");\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O2tEQUNiLDhEQUFDWTt3Q0FBR1osV0FBVTtrREFBMEI7Ozs7OztrREFDeEMsOERBQUMwQjtrREFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVNyQjtHQWhoQndCcEk7S0FBQUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaWxzbC9Eb2N1bWVudHMvTmlscy9wcm9qZWN0cy9nYXVudGxldC9zbGFjay1jbG9uZS12MC9hcHAvcGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IFNpZGViYXIgfSBmcm9tICdAL2NvbXBvbmVudHMvU2lkZWJhcidcbmltcG9ydCB7IE1lc3NhZ2VMaXN0IH0gZnJvbSAnQC9jb21wb25lbnRzL01lc3NhZ2VMaXN0J1xuaW1wb3J0IHsgTWVzc2FnZUlucHV0IH0gZnJvbSAnQC9jb21wb25lbnRzL01lc3NhZ2VJbnB1dCdcbmltcG9ydCB7IFRocmVhZFZpZXcgfSBmcm9tICdAL2NvbXBvbmVudHMvVGhyZWFkVmlldydcbmltcG9ydCB7IFNlYXJjaEJhciB9IGZyb20gJ0AvY29tcG9uZW50cy9TZWFyY2hCYXInXG5pbXBvcnQgeyBTZWFyY2hSZXN1bHRzIH0gZnJvbSAnQC9jb21wb25lbnRzL1NlYXJjaFJlc3VsdHMnXG5pbXBvcnQgeyBVc2VyLCBDaGFubmVsLCBDaGFubmVsTWVtYmVyc2hpcCwgTWVzc2FnZSwgUmVhY3Rpb24sIEF0dGFjaG1lbnQgfSBmcm9tICdAL3R5cGVzL2RhdGFTdHJ1Y3R1cmVzJ1xuaW1wb3J0IHsgQ2lyY2xlU3RhdHVzIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2NpcmNsZS1zdGF0dXMnXG5pbXBvcnQgeyBIYXNoIH0gZnJvbSAnbHVjaWRlLXJlYWN0J1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQYWdlKCkge1xuICBjb25zdCBbYXBwRGF0YSwgc2V0QXBwRGF0YV0gPSB1c2VTdGF0ZTx7XG4gICAgdXNlcnM6IFVzZXJbXVxuICAgIGNoYW5uZWxzOiBDaGFubmVsW11cbiAgICBjaGFubmVsTWVtYmVyc2hpcHM6IENoYW5uZWxNZW1iZXJzaGlwW11cbiAgICBtZXNzYWdlczogTWVzc2FnZVtdXG4gICAgcmVhY3Rpb25zOiBSZWFjdGlvbltdXG4gIH0gfCBudWxsPihudWxsKVxuICBjb25zdCBbc2VsZWN0ZWRDaGFubmVsLCBzZXRTZWxlY3RlZENoYW5uZWxdID0gdXNlU3RhdGU8Q2hhbm5lbCB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtzZWxlY3RlZFVzZXIsIHNldFNlbGVjdGVkVXNlcl0gPSB1c2VTdGF0ZTxVc2VyIHwgbnVsbD4obnVsbClcbiAgY29uc3QgW3NlbGVjdGVkQ2hhbm5lbElkLCBzZXRTZWxlY3RlZENoYW5uZWxJZF0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKVxuICBjb25zdCBbc2VsZWN0ZWRVc2VySWQsIHNldFNlbGVjdGVkVXNlcklkXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFttZXNzYWdlcywgc2V0TWVzc2FnZXNdID0gdXNlU3RhdGU8TWVzc2FnZVtdPihbXSlcbiAgY29uc3QgW29wZW5UaHJlYWRJZCwgc2V0T3BlblRocmVhZElkXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtzZWFyY2hRdWVyeSwgc2V0U2VhcmNoUXVlcnldID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IFtzZWFyY2hSZXN1bHRzLCBzZXRTZWFyY2hSZXN1bHRzXSA9IHVzZVN0YXRlPHtcbiAgICBtZXNzYWdlczogeyBtZXNzYWdlOiBNZXNzYWdlOyBjaGFubmVsOiBDaGFubmVsIH1bXTtcbiAgICBmaWxlczogeyBhdHRhY2htZW50OiBBdHRhY2htZW50OyBtZXNzYWdlOiBNZXNzYWdlOyBjaGFubmVsOiBDaGFubmVsIH1bXTtcbiAgfT4oeyBtZXNzYWdlczogW10sIGZpbGVzOiBbXSB9KVxuXG4gIC8vIEZldGNoIGluaXRpYWwgZGF0YVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoKCcvYXBpL2dldERhdGEnKVxuICAgICAgLnRoZW4oYXN5bmMgcmVzID0+IHtcbiAgICAgICAgaWYgKCFyZXMub2spIHtcbiAgICAgICAgICBjb25zdCB0ZXh0ID0gYXdhaXQgcmVzLnRleHQoKVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIGRhdGE6ICR7cmVzLnN0YXR1c30gJHt0ZXh0fWApXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKClcbiAgICAgIH0pXG4gICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgc2V0QXBwRGF0YShkYXRhKVxuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggZGF0YTonLCBlcnIpXG4gICAgICB9KVxuICB9LCBbXSlcblxuICAvLyBLZWVwIHNlbGVjdGVkIGNoYW5uZWwvdXNlciBpbiBzeW5jXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFhcHBEYXRhKSByZXR1cm5cbiAgICBjb25zdCBuZXdTZWxlY3RlZENoYW5uZWwgPSBhcHBEYXRhLmNoYW5uZWxzLmZpbmQoYyA9PiBjLmlkID09PSBzZWxlY3RlZENoYW5uZWxJZCkgfHwgbnVsbFxuICAgIGNvbnN0IG5ld1NlbGVjdGVkVXNlciA9IGFwcERhdGEudXNlcnMuZmluZCh1ID0+IHUuaWQgPT09IHNlbGVjdGVkVXNlcklkKSB8fCBudWxsXG4gICAgc2V0U2VsZWN0ZWRDaGFubmVsKG5ld1NlbGVjdGVkQ2hhbm5lbClcbiAgICBzZXRTZWxlY3RlZFVzZXIobmV3U2VsZWN0ZWRVc2VyKVxuICB9LCBbc2VsZWN0ZWRDaGFubmVsSWQsIHNlbGVjdGVkVXNlcklkLCBhcHBEYXRhXSlcblxuICAvLyBVcGRhdGUgbWVzc2FnZXMgd2hlbiBzZWxlY3Rpb24gY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghYXBwRGF0YSkgcmV0dXJuXG4gICAgaWYgKHNlbGVjdGVkQ2hhbm5lbElkKSB7XG4gICAgICBzZXRNZXNzYWdlcyhhcHBEYXRhLm1lc3NhZ2VzLmZpbHRlcihtID0+IG0uY2hhbm5lbElkID09PSBzZWxlY3RlZENoYW5uZWxJZCkpXG4gICAgfSBlbHNlIGlmIChzZWxlY3RlZFVzZXJJZCkge1xuICAgICAgY29uc3QgZG1DaGFubmVsID0gYXBwRGF0YS5jaGFubmVscy5maW5kKGMgPT4gXG4gICAgICAgIGMuaXNQcml2YXRlICYmIGMubmFtZS5pbmNsdWRlcyhhcHBEYXRhLnVzZXJzLmZpbmQodSA9PiB1LmlkID09PSBzZWxlY3RlZFVzZXJJZCk/Lm5hbWUgfHwgJycpXG4gICAgICApXG4gICAgICBzZXRNZXNzYWdlcyhkbUNoYW5uZWwgPyBhcHBEYXRhLm1lc3NhZ2VzLmZpbHRlcihtID0+IG0uY2hhbm5lbElkID09PSBkbUNoYW5uZWwuaWQpIDogW10pXG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE1lc3NhZ2VzKFtdKVxuICAgIH1cbiAgfSwgW3NlbGVjdGVkQ2hhbm5lbElkLCBzZWxlY3RlZFVzZXJJZCwgYXBwRGF0YV0pXG5cbiAgY29uc3QgaGFuZGxlU2VsZWN0Q2hhbm5lbCA9IChjaGFubmVsSWQ6IHN0cmluZykgPT4ge1xuICAgIHNldFNlbGVjdGVkQ2hhbm5lbElkKGNoYW5uZWxJZClcbiAgICBzZXRTZWxlY3RlZFVzZXJJZChudWxsKVxuICAgIHNldE9wZW5UaHJlYWRJZChudWxsKVxuICAgIHNldFNlYXJjaFJlc3VsdHMoeyBtZXNzYWdlczogW10sIGZpbGVzOiBbXSB9KVxuICB9XG5cbiAgY29uc3QgaGFuZGxlU2VsZWN0VXNlciA9ICh1c2VySWQ6IHN0cmluZykgPT4ge1xuICAgIHNldFNlbGVjdGVkVXNlcklkKHVzZXJJZClcbiAgICBzZXRTZWxlY3RlZENoYW5uZWxJZChudWxsKVxuICAgIHNldE9wZW5UaHJlYWRJZChudWxsKVxuICAgIHNldFNlYXJjaFJlc3VsdHMoeyBtZXNzYWdlczogW10sIGZpbGVzOiBbXSB9KVxuICB9XG5cbiAgY29uc3QgaGFuZGxlQ3JlYXRlQ2hhbm5lbCA9IGFzeW5jIChjaGFubmVsTmFtZTogc3RyaW5nKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvY2hhbm5lbHMnLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lOiBjaGFubmVsTmFtZSB9KSxcbiAgICAgIH0pXG4gICAgICBcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBjcmVhdGUgY2hhbm5lbDogJHtyZXNwb25zZS5zdGF0dXN9ICR7dGV4dH1gKVxuICAgICAgfVxuICAgICAgXG4gICAgICBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgIFxuICAgICAgLy8gUmVmcmVzaCBkYXRhXG4gICAgICBjb25zdCBkYXRhUmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9nZXREYXRhJylcbiAgICAgIGlmICghZGF0YVJlc3BvbnNlLm9rKSB7XG4gICAgICAgIGNvbnN0IHRleHQgPSBhd2FpdCBkYXRhUmVzcG9uc2UudGV4dCgpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHJlZnJlc2ggZGF0YTogJHtkYXRhUmVzcG9uc2Uuc3RhdHVzfSAke3RleHR9YClcbiAgICAgIH1cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBkYXRhUmVzcG9uc2UuanNvbigpXG4gICAgICBzZXRBcHBEYXRhKGRhdGEpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIGNoYW5uZWw6JywgZXJyb3IpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgaGFuZGxlU2VuZE1lc3NhZ2UgPSBhc3luYyAoY29udGVudDogc3RyaW5nLCBhdHRhY2htZW50czogRmlsZVtdKSA9PiB7XG4gICAgaWYgKCFhcHBEYXRhKSByZXR1cm5cbiAgICB0cnkge1xuICAgICAgY29uc3QgbmV3Q2hhbm5lbElkID0gc2VsZWN0ZWRDaGFubmVsSWQgfHwgXG4gICAgICAgIGFwcERhdGEuY2hhbm5lbHMuZmluZChjID0+XG4gICAgICAgICAgYy5pc1ByaXZhdGUgJiYgYy5uYW1lLmluY2x1ZGVzKGFwcERhdGEudXNlcnMuZmluZCh1ID0+IHUuaWQgPT09IHNlbGVjdGVkVXNlcklkKT8ubmFtZSB8fCAnJylcbiAgICAgICAgKT8uaWQgfHwgJydcblxuICAgICAgaWYgKCFuZXdDaGFubmVsSWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBjaGFubmVsIHNlbGVjdGVkIGFuZCBubyBETSBjaGFubmVsIGZvdW5kJylcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ1NlbmRpbmcgbWVzc2FnZTonLCB7XG4gICAgICAgIGNvbnRlbnQsXG4gICAgICAgIGNoYW5uZWxJZDogbmV3Q2hhbm5lbElkLFxuICAgICAgICBhdHRhY2htZW50c0NvdW50OiBhdHRhY2htZW50cy5sZW5ndGhcbiAgICAgIH0pXG5cbiAgICAgIC8vIFVwbG9hZCBmaWxlcyBmaXJzdFxuICAgICAgY29uc3QgdXBsb2FkZWRBdHRhY2htZW50cyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICBhdHRhY2htZW50cy5tYXAoYXN5bmMgKGZpbGUpID0+IHtcbiAgICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpXG4gICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSlcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCB1cGxvYWRSZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3VwbG9hZCcsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgYm9keTogZm9ybURhdGEsXG4gICAgICAgICAgfSlcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoIXVwbG9hZFJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byB1cGxvYWQgZmlsZTogJHt1cGxvYWRSZXNwb25zZS5zdGF0dXN9YClcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIHVwbG9hZFJlc3BvbnNlLmpzb24oKVxuICAgICAgICB9KVxuICAgICAgKVxuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL21lc3NhZ2VzJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBjb250ZW50LFxuICAgICAgICAgIGNoYW5uZWxJZDogbmV3Q2hhbm5lbElkLFxuICAgICAgICAgIGF0dGFjaG1lbnRzOiB1cGxvYWRlZEF0dGFjaG1lbnRzLFxuICAgICAgICB9KSxcbiAgICAgIH0pXG5cbiAgICAgIGNvbnN0IHJlc3BvbnNlRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKS5jYXRjaCgoKSA9PiBudWxsKVxuICAgICAgY29uc29sZS5sb2coJ01lc3NhZ2UgQVBJIHJlc3BvbnNlOicsIHtcbiAgICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsXG4gICAgICAgIG9rOiByZXNwb25zZS5vayxcbiAgICAgICAgZGF0YTogcmVzcG9uc2VEYXRhXG4gICAgICB9KVxuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgRmFpbGVkIHRvIHNlbmQgbWVzc2FnZTogJHtyZXNwb25zZS5zdGF0dXN9ICR7XG4gICAgICAgICAgICByZXNwb25zZURhdGE/LmRldGFpbHMgfHwgcmVzcG9uc2VEYXRhPy5lcnJvciB8fCAnVW5rbm93biBlcnJvcidcbiAgICAgICAgICB9YFxuICAgICAgICApXG4gICAgICB9XG5cbiAgICAgIC8vIFJlZnJlc2ggZGF0YVxuICAgICAgY29uc29sZS5sb2coJ1JlZnJlc2hpbmcgZGF0YSBhZnRlciBtZXNzYWdlIHNlbmQnKVxuICAgICAgY29uc3QgZGF0YVJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvZ2V0RGF0YScpXG4gICAgICBpZiAoIWRhdGFSZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCB0ZXh0ID0gYXdhaXQgZGF0YVJlc3BvbnNlLnRleHQoKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byByZWZyZXNoIGRhdGE6ICR7ZGF0YVJlc3BvbnNlLnN0YXR1c30gJHt0ZXh0fWApXG4gICAgICB9XG4gICAgICBjb25zdCBuZXdEYXRhID0gYXdhaXQgZGF0YVJlc3BvbnNlLmpzb24oKVxuICAgICAgc2V0QXBwRGF0YShuZXdEYXRhKVxuICAgICAgc2V0TWVzc2FnZXMobmV3RGF0YS5tZXNzYWdlcy5maWx0ZXIoKG06IE1lc3NhZ2UpID0+IG0uY2hhbm5lbElkID09PSBuZXdDaGFubmVsSWQpKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gc2VuZCBtZXNzYWdlOicsIGVycm9yKVxuICAgICAgYWxlcnQoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRmFpbGVkIHRvIHNlbmQgbWVzc2FnZScpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgaGFuZGxlU2VuZFJlcGx5ID0gYXN5bmMgKGNvbnRlbnQ6IHN0cmluZywgYXR0YWNobWVudHM6IEZpbGVbXSwgcGFyZW50TWVzc2FnZUlkOiBzdHJpbmcpID0+IHtcbiAgICBpZiAoIWFwcERhdGEpIHJldHVyblxuICAgIGNvbnN0IHBhcmVudE1zZyA9IGFwcERhdGEubWVzc2FnZXMuZmluZChtID0+IG0uaWQgPT09IHBhcmVudE1lc3NhZ2VJZClcbiAgICBpZiAoIXBhcmVudE1zZykge1xuICAgICAgY29uc29sZS5lcnJvcignUGFyZW50IG1lc3NhZ2Ugbm90IGZvdW5kOicsIHBhcmVudE1lc3NhZ2VJZClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZygnU2VuZGluZyByZXBseTonLCB7XG4gICAgICAgIGNvbnRlbnQsXG4gICAgICAgIGNoYW5uZWxJZDogcGFyZW50TXNnLmNoYW5uZWxJZCxcbiAgICAgICAgcGFyZW50TWVzc2FnZUlkLFxuICAgICAgICBhdHRhY2htZW50c0NvdW50OiBhdHRhY2htZW50cy5sZW5ndGhcbiAgICAgIH0pXG5cbiAgICAgIC8vIFVwbG9hZCBmaWxlcyBmaXJzdFxuICAgICAgY29uc3QgdXBsb2FkZWRBdHRhY2htZW50cyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICBhdHRhY2htZW50cy5tYXAoYXN5bmMgKGZpbGUpID0+IHtcbiAgICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpXG4gICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSlcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCB1cGxvYWRSZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3VwbG9hZCcsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgYm9keTogZm9ybURhdGEsXG4gICAgICAgICAgfSlcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoIXVwbG9hZFJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byB1cGxvYWQgZmlsZTogJHt1cGxvYWRSZXNwb25zZS5zdGF0dXN9YClcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIHVwbG9hZFJlc3BvbnNlLmpzb24oKVxuICAgICAgICB9KVxuICAgICAgKVxuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL21lc3NhZ2VzJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBjb250ZW50LFxuICAgICAgICAgIGNoYW5uZWxJZDogcGFyZW50TXNnLmNoYW5uZWxJZCxcbiAgICAgICAgICBwYXJlbnRNZXNzYWdlSWQsXG4gICAgICAgICAgYXR0YWNobWVudHM6IHVwbG9hZGVkQXR0YWNobWVudHMsXG4gICAgICAgIH0pLFxuICAgICAgfSlcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCBlcnJvckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCkuY2F0Y2goKCkgPT4gbnVsbClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgIGBGYWlsZWQgdG8gc2VuZCByZXBseTogJHtyZXNwb25zZS5zdGF0dXN9ICR7XG4gICAgICAgICAgICBlcnJvckRhdGE/LmRldGFpbHMgfHwgZXJyb3JEYXRhPy5lcnJvciB8fCAnVW5rbm93biBlcnJvcidcbiAgICAgICAgICB9YFxuICAgICAgICApXG4gICAgICB9XG5cbiAgICAgIC8vIFJlZnJlc2ggZGF0YVxuICAgICAgY29uc29sZS5sb2coJ1JlZnJlc2hpbmcgZGF0YSBhZnRlciByZXBseScpXG4gICAgICBjb25zdCBkYXRhUmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9nZXREYXRhJylcbiAgICAgIGlmICghZGF0YVJlc3BvbnNlLm9rKSB7XG4gICAgICAgIGNvbnN0IHRleHQgPSBhd2FpdCBkYXRhUmVzcG9uc2UudGV4dCgpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHJlZnJlc2ggZGF0YTogJHtkYXRhUmVzcG9uc2Uuc3RhdHVzfSAke3RleHR9YClcbiAgICAgIH1cbiAgICAgIGNvbnN0IG5ld0RhdGEgPSBhd2FpdCBkYXRhUmVzcG9uc2UuanNvbigpXG4gICAgICBzZXRBcHBEYXRhKG5ld0RhdGEpXG4gICAgICBzZXRNZXNzYWdlcyhuZXdEYXRhLm1lc3NhZ2VzLmZpbHRlcigobTogTWVzc2FnZSkgPT4gbS5jaGFubmVsSWQgPT09IHBhcmVudE1zZy5jaGFubmVsSWQpKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gc2VuZCByZXBseTonLCBlcnJvcilcbiAgICAgIGFsZXJ0KGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0ZhaWxlZCB0byBzZW5kIHJlcGx5JylcbiAgICB9XG4gIH1cblxuICBjb25zdCBoYW5kbGVSZWFjdCA9IGFzeW5jIChtZXNzYWdlSWQ6IHN0cmluZywgZW1vamk6IHN0cmluZykgPT4ge1xuICAgIGlmICghYXBwRGF0YSkgcmV0dXJuXG4gICAgXG4gICAgY29uc3QgZXhpc3RpbmdSZWFjdGlvbiA9IGFwcERhdGEucmVhY3Rpb25zLmZpbmQoXG4gICAgICByID0+IHIubWVzc2FnZUlkID09PSBtZXNzYWdlSWQgJiYgci51c2VySWQgPT09IGFwcERhdGEudXNlcnNbMF0uaWQgJiYgci5lbW9qaSA9PT0gZW1vamlcbiAgICApXG4gICAgXG4gICAgaWYgKGV4aXN0aW5nUmVhY3Rpb24pIHtcbiAgICAgIC8vIERlbGV0ZSByZWFjdGlvblxuICAgICAgYXdhaXQgZmV0Y2goJy9hcGkvcmVhY3Rpb25zJywge1xuICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBpZDogZXhpc3RpbmdSZWFjdGlvbi5pZCB9KSxcbiAgICAgIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIENyZWF0ZSByZWFjdGlvblxuICAgICAgYXdhaXQgZmV0Y2goJy9hcGkvcmVhY3Rpb25zJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbWVzc2FnZUlkLCBlbW9qaSB9KSxcbiAgICAgIH0pXG4gICAgfVxuICAgIFxuICAgIC8vIFJlZnJlc2ggZGF0YSBpbnN0ZWFkIG9mIHVwZGF0aW5nIGxvY2FsIHN0YXRlXG4gICAgY29uc3QgbmV3RGF0YSA9IGF3YWl0IGZldGNoKCcvYXBpL2dldERhdGEnKS50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgIHNldEFwcERhdGEobmV3RGF0YSlcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZU9wZW5UaHJlYWQgPSBhc3luYyAobWVzc2FnZUlkOiBzdHJpbmcpID0+IHtcbiAgICAvLyBGaXJzdCB2ZXJpZnkgdGhlIG1lc3NhZ2UgZXhpc3RzIGluIERCXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvbWVzc2FnZXMvJHttZXNzYWdlSWR9YClcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZldGNoIG1lc3NhZ2U6JywgbWVzc2FnZUlkKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gUmVmcmVzaCBkYXRhIHRvIGVuc3VyZSB3ZSBoYXZlIGxhdGVzdCBzdGF0ZVxuICAgICAgY29uc3QgZGF0YVJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvZ2V0RGF0YScpXG4gICAgICBpZiAoIWRhdGFSZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byByZWZyZXNoIGRhdGE6ICR7ZGF0YVJlc3BvbnNlLnN0YXR1c31gKVxuICAgICAgfVxuICAgICAgY29uc3QgbmV3RGF0YSA9IGF3YWl0IGRhdGFSZXNwb25zZS5qc29uKClcbiAgICAgIHNldEFwcERhdGEobmV3RGF0YSlcbiAgICAgIFxuICAgICAgLy8gT25seSBvcGVuIHRocmVhZCBpZiBtZXNzYWdlIGV4aXN0cyBpbiBmcmVzaCBkYXRhXG4gICAgICBjb25zdCBtZXNzYWdlID0gbmV3RGF0YS5tZXNzYWdlcy5maW5kKChtOiBNZXNzYWdlKSA9PiBtLmlkID09PSBtZXNzYWdlSWQpXG4gICAgICBpZiAobWVzc2FnZSkge1xuICAgICAgICBzZXRPcGVuVGhyZWFkSWQobWVzc2FnZUlkKVxuICAgICAgICBzZXRTZWxlY3RlZENoYW5uZWxJZChtZXNzYWdlLmNoYW5uZWxJZClcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIG9wZW4gdGhyZWFkOicsIGVycm9yKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUNsb3NlVGhyZWFkID0gKCkgPT4ge1xuICAgIHNldE9wZW5UaHJlYWRJZChudWxsKVxuICB9XG5cbiAgY29uc3QgaGFuZGxlU2VhcmNoID0gYXN5bmMgKHF1ZXJ5OiBzdHJpbmcpID0+IHtcbiAgICBzZXRTZWFyY2hRdWVyeShxdWVyeSlcbiAgICBpZiAoIWFwcERhdGEpIHJldHVyblxuICAgIFxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL3NlYXJjaD9xPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHF1ZXJ5KX1gKVxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCB0ZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgU2VhcmNoIGZhaWxlZDogJHtyZXNwb25zZS5zdGF0dXN9ICR7dGV4dH1gKVxuICAgICAgfVxuICAgICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgc2V0U2VhcmNoUmVzdWx0cyhyZXN1bHRzKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdTZWFyY2ggZmFpbGVkOicsIGVycm9yKVxuICAgICAgc2V0U2VhcmNoUmVzdWx0cyh7IG1lc3NhZ2VzOiBbXSwgZmlsZXM6IFtdIH0pXG4gICAgfVxuICB9XG5cbiAgY29uc3QgaGFuZGxlU2VsZWN0U2VhcmNoUmVzdWx0ID0gKGNoYW5uZWxJZDogc3RyaW5nLCBtZXNzYWdlSWQ6IHN0cmluZykgPT4ge1xuICAgIHNldFNlbGVjdGVkQ2hhbm5lbElkKGNoYW5uZWxJZClcbiAgICBzZXRTZWxlY3RlZFVzZXJJZChudWxsKVxuICAgIHNldE9wZW5UaHJlYWRJZChtZXNzYWdlSWQpXG4gICAgc2V0U2VhcmNoUXVlcnkoJycpXG4gICAgc2V0U2VhcmNoUmVzdWx0cyh7IG1lc3NhZ2VzOiBbXSwgZmlsZXM6IFtdIH0pXG4gIH1cblxuICBjb25zdCBoYW5kbGVTZXRVc2VyU3RhdHVzID0gYXN5bmMgKG5ld1N0YXR1czogc3RyaW5nKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvdXNlcnMvc3RhdHVzJywge1xuICAgICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHN0YXR1czogbmV3U3RhdHVzIH0pLFxuICAgICAgfSlcbiAgICAgIFxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCB0ZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHVwZGF0ZSBzdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzfSAke3RleHR9YClcbiAgICAgIH1cbiAgICAgIFxuICAgICAgYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICBcbiAgICAgIC8vIFJlZnJlc2ggZGF0YVxuICAgICAgY29uc3QgZGF0YVJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvZ2V0RGF0YScpXG4gICAgICBpZiAoIWRhdGFSZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCB0ZXh0ID0gYXdhaXQgZGF0YVJlc3BvbnNlLnRleHQoKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byByZWZyZXNoIGRhdGE6ICR7ZGF0YVJlc3BvbnNlLnN0YXR1c30gJHt0ZXh0fWApXG4gICAgICB9XG4gICAgICBjb25zdCBuZXdEYXRhID0gYXdhaXQgZGF0YVJlc3BvbnNlLmpzb24oKVxuICAgICAgc2V0QXBwRGF0YShuZXdEYXRhKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gdXBkYXRlIHN0YXR1czonLCBlcnJvcilcbiAgICB9XG4gIH1cblxuICBjb25zdCBoYW5kbGVTZXRVc2VyQXZhdGFyID0gYXN5bmMgKG5ld0Vtb2ppOiBzdHJpbmcpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS91c2Vycy9hdmF0YXInLCB7XG4gICAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYXZhdGFyOiBuZXdFbW9qaSB9KSxcbiAgICAgIH0pXG4gICAgICBcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byB1cGRhdGUgYXZhdGFyOiAke3Jlc3BvbnNlLnN0YXR1c30gJHt0ZXh0fWApXG4gICAgICB9XG4gICAgICBcbiAgICAgIGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgXG4gICAgICAvLyBSZWZyZXNoIGRhdGFcbiAgICAgIGNvbnN0IGRhdGFSZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2dldERhdGEnKVxuICAgICAgaWYgKCFkYXRhUmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IGRhdGFSZXNwb25zZS50ZXh0KClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcmVmcmVzaCBkYXRhOiAke2RhdGFSZXNwb25zZS5zdGF0dXN9ICR7dGV4dH1gKVxuICAgICAgfVxuICAgICAgY29uc3QgbmV3RGF0YSA9IGF3YWl0IGRhdGFSZXNwb25zZS5qc29uKClcbiAgICAgIHNldEFwcERhdGEobmV3RGF0YSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHVwZGF0ZSBhdmF0YXI6JywgZXJyb3IpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgaGFuZGxlU2V0VXNlck5hbWUgPSBhc3luYyAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvdXNlcnMvbmFtZScsIHtcbiAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lOiBuZXdOYW1lIH0pLFxuICAgICAgfSlcbiAgICAgIFxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCB0ZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHVwZGF0ZSBuYW1lOiAke3Jlc3BvbnNlLnN0YXR1c30gJHt0ZXh0fWApXG4gICAgICB9XG4gICAgICBcbiAgICAgIGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgXG4gICAgICAvLyBSZWZyZXNoIGRhdGFcbiAgICAgIGNvbnN0IGRhdGFSZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2dldERhdGEnKVxuICAgICAgaWYgKCFkYXRhUmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IGRhdGFSZXNwb25zZS50ZXh0KClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcmVmcmVzaCBkYXRhOiAke2RhdGFSZXNwb25zZS5zdGF0dXN9ICR7dGV4dH1gKVxuICAgICAgfVxuICAgICAgY29uc3QgbmV3RGF0YSA9IGF3YWl0IGRhdGFSZXNwb25zZS5qc29uKClcbiAgICAgIHNldEFwcERhdGEobmV3RGF0YSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHVwZGF0ZSBuYW1lOicsIGVycm9yKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgIWFwcERhdGEgPyAoXG4gICAgICA8ZGl2PkxvYWRpbmcgZGF0YS4uLjwvZGl2PlxuICAgICkgOiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgaC1zY3JlZW4gYmctZ3JheS01MCB0ZXh0LXNsYXRlLTcwMFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgtbm9uZSBwLTQgYm9yZGVyLWIgYm9yZGVyLWdyYXktNzAwIGJnLWdyYXktODAwIHRleHQtd2hpdGVcIj5cbiAgICAgICAgICA8U2VhcmNoQmFyIG9uU2VhcmNoPXtoYW5kbGVTZWFyY2h9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC0xIG92ZXJmbG93LWhpZGRlblwiPlxuICAgICAgICAgIDxTaWRlYmFyXG4gICAgICAgICAgICBpc09wZW49e3RydWV9XG4gICAgICAgICAgICBjaGFubmVscz17YXBwRGF0YS5jaGFubmVscy5maWx0ZXIoY2ggPT4gIWNoLmlzUHJpdmF0ZSl9XG4gICAgICAgICAgICB1c2Vycz17YXBwRGF0YS51c2Vyc31cbiAgICAgICAgICAgIG9uU2VsZWN0Q2hhbm5lbD17aGFuZGxlU2VsZWN0Q2hhbm5lbH1cbiAgICAgICAgICAgIG9uU2VsZWN0VXNlcj17aGFuZGxlU2VsZWN0VXNlcn1cbiAgICAgICAgICAgIG9uQ3JlYXRlQ2hhbm5lbD17aGFuZGxlQ3JlYXRlQ2hhbm5lbH1cbiAgICAgICAgICAgIG9uU2V0VXNlclN0YXR1cz17aGFuZGxlU2V0VXNlclN0YXR1c31cbiAgICAgICAgICAgIG9uU2V0VXNlckF2YXRhcj17aGFuZGxlU2V0VXNlckF2YXRhcn1cbiAgICAgICAgICAgIG9uU2V0VXNlck5hbWU9e2hhbmRsZVNldFVzZXJOYW1lfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LTEgZmxleCBmbGV4LWNvbFwiPlxuICAgICAgICAgICAge3NlYXJjaFF1ZXJ5LnRyaW0oKS5sZW5ndGggPiAwID8gKFxuICAgICAgICAgICAgICA8U2VhcmNoUmVzdWx0c1xuICAgICAgICAgICAgICAgIHJlc3VsdHM9e3NlYXJjaFJlc3VsdHN9XG4gICAgICAgICAgICAgICAgdXNlcnM9e2FwcERhdGEudXNlcnN9XG4gICAgICAgICAgICAgICAgb25TZWxlY3RSZXN1bHQ9e2hhbmRsZVNlbGVjdFNlYXJjaFJlc3VsdH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICkgOiBzZWxlY3RlZENoYW5uZWwgfHwgc2VsZWN0ZWRVc2VyID8gKFxuICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC00IGJvcmRlci1iIGJnLXdoaXRlXCI+XG4gICAgICAgICAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC14bCBmb250LXNlbWlib2xkXCI+XG4gICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZENoYW5uZWwgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEhhc2ggY2xhc3NOYW1lPVwiaC01IHctNVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7c2VsZWN0ZWRDaGFubmVsLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICkgOiBzZWxlY3RlZFVzZXIgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVsYXRpdmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC0yeGxcIj57c2VsZWN0ZWRVc2VyLmF2YXRhcn08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxDaXJjbGVTdGF0dXMgaXNPbmxpbmU9e3NlbGVjdGVkVXNlci5pc09ubGluZX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPntzZWxlY3RlZFVzZXIubmFtZX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZFVzZXIuc3RhdHVzICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZFVzZXIuc3RhdHVzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgPC9oMj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgtMSBmbGV4IG92ZXJmbG93LWhpZGRlblwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BmbGV4LTEgZmxleCBmbGV4LWNvbCAke29wZW5UaHJlYWRJZCA/ICdtZDp3LTIvMycgOiAndy1mdWxsJ30gYmctd2hpdGUgYm9yZGVyLWwgYm9yZGVyLXJgfT5cbiAgICAgICAgICAgICAgICAgICAgPE1lc3NhZ2VMaXN0XG4gICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZXM9e21lc3NhZ2VzIHx8IFtdfVxuICAgICAgICAgICAgICAgICAgICAgIHVzZXJzPXthcHBEYXRhLnVzZXJzfVxuICAgICAgICAgICAgICAgICAgICAgIHJlYWN0aW9ucz17YXBwRGF0YS5yZWFjdGlvbnN9XG4gICAgICAgICAgICAgICAgICAgICAgb25SZXBseT17aGFuZGxlT3BlblRocmVhZH1cbiAgICAgICAgICAgICAgICAgICAgICBvblJlYWN0PXtoYW5kbGVSZWFjdH1cbiAgICAgICAgICAgICAgICAgICAgICBvbk9wZW5UaHJlYWQ9e2hhbmRsZU9wZW5UaHJlYWR9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDxNZXNzYWdlSW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICBvblNlbmRNZXNzYWdlPXtoYW5kbGVTZW5kTWVzc2FnZX1cbiAgICAgICAgICAgICAgICAgICAgICByZXBseWluZ1RvPXtudWxsfVxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2FuY2VsUmVwbHk9eygpID0+IHt9fVxuICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VuZCBhIG1lc3NhZ2UgdG8gdGhlIGNoYW5uZWwuLi5cIlxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICB7b3BlblRocmVhZElkICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoaWRkZW4gbWQ6ZmxleCBtZDp3LTEvMyBib3JkZXItbFwiPlxuICAgICAgICAgICAgICAgICAgICAgIHttZXNzYWdlcy5zb21lKG0gPT4gbS5pZCA9PT0gb3BlblRocmVhZElkKSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxUaHJlYWRWaWV3XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudE1lc3NhZ2U9e21lc3NhZ2VzLmZpbmQoKG0pID0+IG0uaWQgPT09IG9wZW5UaHJlYWRJZCkhfVxuICAgICAgICAgICAgICAgICAgICAgICAgICByZXBsaWVzPXttZXNzYWdlcy5maWx0ZXIoKG0pID0+IG0ucGFyZW50TWVzc2FnZUlkID09PSBvcGVuVGhyZWFkSWQpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB1c2Vycz17YXBwRGF0YS51c2Vyc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhY3Rpb25zPXthcHBEYXRhLnJlYWN0aW9uc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbG9zZT17aGFuZGxlQ2xvc2VUaHJlYWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uUmVwbHk9eyhjb250ZW50OiBzdHJpbmcsIGF0dGFjaG1lbnRzOiBGaWxlW10sIHBhcmVudE1lc3NhZ2VJZDogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdm9pZCBoYW5kbGVTZW5kUmVwbHkoY29udGVudCwgYXR0YWNobWVudHMsIHBhcmVudE1lc3NhZ2VJZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uUmVhY3Q9e2hhbmRsZVJlYWN0fVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTRcIj5Mb2FkaW5nIHRocmVhZC4uLjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGgtZnVsbFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgbWItNFwiPldlbGNvbWUgdG8gQ2hhdEdlbml1czwvaDI+XG4gICAgICAgICAgICAgICAgICA8cD5TZWxlY3QgYSBjaGFubmVsIG9yIHVzZXIgdG8gc3RhcnQgbWVzc2FnaW5nLCBvciB1c2UgdGhlIHNlYXJjaCBiYXIgYWJvdmUuPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICApXG59XG5cbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIlNpZGViYXIiLCJNZXNzYWdlTGlzdCIsIk1lc3NhZ2VJbnB1dCIsIlRocmVhZFZpZXciLCJTZWFyY2hCYXIiLCJTZWFyY2hSZXN1bHRzIiwiQ2lyY2xlU3RhdHVzIiwiSGFzaCIsIlBhZ2UiLCJhcHBEYXRhIiwic2V0QXBwRGF0YSIsInNlbGVjdGVkQ2hhbm5lbCIsInNldFNlbGVjdGVkQ2hhbm5lbCIsInNlbGVjdGVkVXNlciIsInNldFNlbGVjdGVkVXNlciIsInNlbGVjdGVkQ2hhbm5lbElkIiwic2V0U2VsZWN0ZWRDaGFubmVsSWQiLCJzZWxlY3RlZFVzZXJJZCIsInNldFNlbGVjdGVkVXNlcklkIiwibWVzc2FnZXMiLCJzZXRNZXNzYWdlcyIsIm9wZW5UaHJlYWRJZCIsInNldE9wZW5UaHJlYWRJZCIsInNlYXJjaFF1ZXJ5Iiwic2V0U2VhcmNoUXVlcnkiLCJzZWFyY2hSZXN1bHRzIiwic2V0U2VhcmNoUmVzdWx0cyIsImZpbGVzIiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwib2siLCJ0ZXh0IiwiRXJyb3IiLCJzdGF0dXMiLCJqc29uIiwiZGF0YSIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwibmV3U2VsZWN0ZWRDaGFubmVsIiwiY2hhbm5lbHMiLCJmaW5kIiwiYyIsImlkIiwibmV3U2VsZWN0ZWRVc2VyIiwidXNlcnMiLCJ1IiwiZmlsdGVyIiwibSIsImNoYW5uZWxJZCIsImRtQ2hhbm5lbCIsImlzUHJpdmF0ZSIsIm5hbWUiLCJpbmNsdWRlcyIsImhhbmRsZVNlbGVjdENoYW5uZWwiLCJoYW5kbGVTZWxlY3RVc2VyIiwidXNlcklkIiwiaGFuZGxlQ3JlYXRlQ2hhbm5lbCIsImNoYW5uZWxOYW1lIiwicmVzcG9uc2UiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhUmVzcG9uc2UiLCJoYW5kbGVTZW5kTWVzc2FnZSIsImNvbnRlbnQiLCJhdHRhY2htZW50cyIsIm5ld0NoYW5uZWxJZCIsImxvZyIsImF0dGFjaG1lbnRzQ291bnQiLCJsZW5ndGgiLCJ1cGxvYWRlZEF0dGFjaG1lbnRzIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsImZpbGUiLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwiYXBwZW5kIiwidXBsb2FkUmVzcG9uc2UiLCJyZXNwb25zZURhdGEiLCJkZXRhaWxzIiwibmV3RGF0YSIsImFsZXJ0IiwibWVzc2FnZSIsImhhbmRsZVNlbmRSZXBseSIsInBhcmVudE1lc3NhZ2VJZCIsInBhcmVudE1zZyIsImVycm9yRGF0YSIsImhhbmRsZVJlYWN0IiwibWVzc2FnZUlkIiwiZW1vamkiLCJleGlzdGluZ1JlYWN0aW9uIiwicmVhY3Rpb25zIiwiciIsImhhbmRsZU9wZW5UaHJlYWQiLCJoYW5kbGVDbG9zZVRocmVhZCIsImhhbmRsZVNlYXJjaCIsInF1ZXJ5IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicmVzdWx0cyIsImhhbmRsZVNlbGVjdFNlYXJjaFJlc3VsdCIsImhhbmRsZVNldFVzZXJTdGF0dXMiLCJuZXdTdGF0dXMiLCJoYW5kbGVTZXRVc2VyQXZhdGFyIiwibmV3RW1vamkiLCJhdmF0YXIiLCJoYW5kbGVTZXRVc2VyTmFtZSIsIm5ld05hbWUiLCJkaXYiLCJjbGFzc05hbWUiLCJvblNlYXJjaCIsImlzT3BlbiIsImNoIiwib25TZWxlY3RDaGFubmVsIiwib25TZWxlY3RVc2VyIiwib25DcmVhdGVDaGFubmVsIiwib25TZXRVc2VyU3RhdHVzIiwib25TZXRVc2VyQXZhdGFyIiwib25TZXRVc2VyTmFtZSIsInRyaW0iLCJvblNlbGVjdFJlc3VsdCIsImgyIiwic3BhbiIsImlzT25saW5lIiwib25SZXBseSIsIm9uUmVhY3QiLCJvbk9wZW5UaHJlYWQiLCJvblNlbmRNZXNzYWdlIiwicmVwbHlpbmdUbyIsIm9uQ2FuY2VsUmVwbHkiLCJwbGFjZWhvbGRlciIsInNvbWUiLCJwYXJlbnRNZXNzYWdlIiwicmVwbGllcyIsIm9uQ2xvc2UiLCJwIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ })

});